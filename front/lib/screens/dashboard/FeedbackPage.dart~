import 'package:flutter/material.dart';
import '../../Controllers/feedbackController.dart';
import '../../Controllers/token_controller.dart';
import '../ContactUs/Chat.dart';
import '../Welcome/welcome_screen.dart';
import 'ActiveUsersTable.dart';
import 'Courses.dart';
import 'Dashboard.dart';
import 'Grants.dart';
import 'IdeasPage.dart';
import 'Notifications.dart';
import 'ProjectsPage.dart';
import 'UsersPage.dart';
import 'chatscreen.dart';

class FeedbackPage extends StatefulWidget {
  const FeedbackPage({Key? key}) : super(key: key);

  @override
  _FeedbackPageState createState() => _FeedbackPageState();
}

class _FeedbackPageState extends State<FeedbackPage> {
  final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();
  List<Map<String, String>> feedbackList = []; // Change the type here
  final FeedbackController feedbackController = FeedbackController();

  @override
  void initState() {
    super.initState();
    getAllFeedback();
  }

  Future<void> getAllFeedback() async {
    // Make sure the method returns List<Map<String, String>>
    feedbackList = await feedbackController.getFeedBack() as List<Map<String, String>>;
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF2B2B2B),
      body: Row(
        children: [
          _buildSidebar(context),
          Expanded(child: _buildMainContent(context)),
        ],
      ),
    );
  }

  Widget _buildSidebar(BuildContext context) {
    return Container(
      width: 250,
      color: const Color(0xFF4A4A4A),
      child: Column(
        children: [
          const SizedBox(height: 70),
          _buildMenuItem(context, "لوحة التحكم", DashboardPage()),
          _buildMenuItem(context, "المستخدمون", UsersPage()),
          _buildMenuItem(context, "المشاريع", ProjectsPage()),
          _buildMenuItem(context, "الأفكار", IdeasPage()),
          _buildMenuItem(context, "الدورات", Courses()),
          _buildMenuItem(context, "أكثر المستخدمين نشاطًا", ActiveUsers()),
          _buildMenuItem(context, "الفيد باك", FeedbackPage()),
          _buildMenuItem(context, "المنح", Grantpage()),
          _buildMenuItem(context, "الإشعارات", Notifications()),
          _buildMenuItem(context, "الرسائل", ChatScreen()),
        ],
      ),
    );
  }

  Widget _buildMenuItem(BuildContext context, String title, Widget page) {
    return ListTile(
      title: Text(
        title,
        style: TextStyle(color: Colors.white54),
      ),
      onTap: () {
        if (page is WelcomeScreen) {
          TokenController tokenController=TokenController();
          tokenController.logout();
          Navigator.pushAndRemoveUntil(
            context,
            MaterialPageRoute(builder: (context) => page),(route) => false,);
        }
        else{
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => page),
          );
        }},
    );
  }


  Widget _buildMainContent(BuildContext context) {
    return Center(
      child: Column(
        children: [
          _buildHeader(),
          _buildTitle(),
          Expanded(child: FeedbackTable(feedbackList: feedbackList)),
        ],
      ),
    );
  }

  Widget _buildTitle() {
    return Container(
      padding: const EdgeInsets.all(16.0),
      alignment: Alignment.center,
      child: const Text(
        "الفيدباك",
        style: TextStyle(color: Colors.white, fontSize: 24, fontWeight: FontWeight.bold),
      ),
    );
  }

  Widget _buildHeader() {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),
      decoration: BoxDecoration(color: const Color(0xFF2B2B2B)),
      child: Row(
        children: [
          const Spacer(),
          _buildSearchBar(),
          const SizedBox(width: 20),
          const ProfileCard(),
        ],
      ),
    );
  }

  Widget _buildSearchBar() {
    return Container(
      width: 300,
      child: TextField(
        decoration: InputDecoration(
          hintText: "بحث",
          hintStyle: const TextStyle(color: Colors.white54),
          fillColor: const Color(0xFF4A4A4A),
          filled: true,
          border: OutlineInputBorder(
            borderSide: BorderSide.none,
            borderRadius: const BorderRadius.all(Radius.circular(10)),
          ),
          suffixIcon: Container(
            decoration: BoxDecoration(color: Colors.green, borderRadius: BorderRadius.circular(10)),
            child: IconButton(
              icon: const Icon(Icons.search, color: Colors.white54),
              onPressed: () {},
            ),
          ),
        ),
      ),
    );
  }
}

class FeedbackTable extends StatelessWidget {
  final List<Map<String, String>> feedbackList;

  const FeedbackTable({Key? key, required this.feedbackList}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      scrollDirection: Axis.vertical,
      child: SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 32),
          child: Container(
            decoration: BoxDecoration(color: const Color(0xFF4A4A4A), borderRadius: BorderRadius.circular(8)),
            child: DataTable(
              columnSpacing: 16,
              horizontalMargin: 10,
              dataRowHeight: 48,
              columns: const [
                DataColumn(label: Text("اسم المستخدم", style: TextStyle(color: Colors.white))),
                DataColumn(label: Text("البريد الإلكتروني", style: TextStyle(color: Colors.white))),
                DataColumn(label: Text("الفيدباك", style: TextStyle(color: Colors.white))),
                DataColumn(label: Text("الإجراءات", style: TextStyle(color: Colors.white))),
              ],
              rows: feedbackList.map((feedback) {
                return DataRow(cells: [
                  DataCell(Text(feedback["username"]!, style: const TextStyle(color: Colors.white))),
                  DataCell(Text(feedback["email"]!, style: const TextStyle(color: Colors.white))),
                  DataCell(Text(feedback["notes"]!, style: const TextStyle(color: Colors.white))),
                  DataCell(
                    IconButton(
                      icon: const Icon(Icons.delete, color: Colors.red),
                      onPressed: () {
                        // Handle delete action here
                      },
                    ),
                  ),
                ]);
              }).toList(),
            ),
          ),
        ),
      ),
    );
  }
}

class ProfileCard extends StatelessWidget {
  const ProfileCard({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(8.0),
      decoration: BoxDecoration(color: const Color(0xFF4A4A4A), borderRadius: BorderRadius.circular(10)),
      child: Row(
        children: [
          const CircleAvatar(
            backgroundImage: AssetImage("assets/images/defaultpfp.jpg"),
            radius: 19,
          ),
          const SizedBox(width: 10.0),
          const Text(
            "اسم الادمن",
            style: TextStyle(color: Colors.white, fontSize: 16),
          ),
        ],
      ),
    );
  }
}